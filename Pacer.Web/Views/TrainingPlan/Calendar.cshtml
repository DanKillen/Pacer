@model TrainingPlanCalendarViewModel

@{
    var viewModelJson = System.Text.Json.JsonSerializer.Serialize(Model);
}

<div id="calendar-plan" class="card shadow p-5 mt-4 mx-auto w-75">
    <div class="position-absolute top-0 start-50 translate-middle rounded-circle bg-dark">
        <img src="\images\LogoTrimWIP.png" alt="Logo" height="50px">
    </div>
    <a href="@Url.Action("ViewTrainingPlan")" class="btn btn-success">
        <i class="bi bi-list"></i> Week List</a>
    <partial name="_TrainingPlanHeader" model="Model" />
    <partial name="_DetailsButton" model="Model" />
    <div class="col-md-12">
        <div class="key">
            <div class="key-item jsCalendar-RecoveryRun">
                Recovery Run @await Component.InvokeAsync("Tooltip", new { key = "RecoveryRun" })
            </div>
            <div class="key-item jsCalendar-EasyRun">
                Easy Run @await Component.InvokeAsync("Tooltip", new { key = "EasyRun" })
            </div>

            <div class="key-item jsCalendar-LongRun">
                Long Run @await Component.InvokeAsync("Tooltip", new { key = "LongRun" })
            </div>
            @if (Model.TargetRace == RaceType.Marathon || Model.TargetRace == RaceType.BMarathon)
            {
                <div class="key-item jsCalendar-MarathonPace">
                    Race Pace @await Component.InvokeAsync("Tooltip", new { key = "MarathonPace" })
                </div>
            }
            <div class="key-item jsCalendar-IntervalTraining">
                Interval Training @await Component.InvokeAsync("Tooltip", new { key = "IntervalTraining" })
            </div>
            <div class="key-item jsCalendar-TempoRun">
                Tempo Run @await Component.InvokeAsync("Tooltip", new { key = "TempoRun" })
            </div>
            @if (Model.TargetRace == RaceType.HalfMarathon || Model.TargetRace == RaceType.BHalfMarathon)
            {
            <div class="key-item jsCalendar-VO2Max">
                VO2 Max @await Component.InvokeAsync("Tooltip", new { key = "VO2Max" })
            </div>
            }
        </div>
        <hr class="custom-hr">

    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-6">
                <div id="calendar" class="material-theme" data-month-format="month YYYY" data-day-format="DD"></div>
            </div>
            <div class="col-md-6">
                <div id="workout-details" aria-live="polite">
                    <h4 id="workout-date">Click on the dates in the calendar to see your workouts.</h4>
                    <hr class="custom-hr">
                    <h5 id="workout-type"></h5>
                    <h6 id="workout-pace"></h6>
                    <p id="workout-description"></p>
                    <div id="previous-results" style="display: none;">
                        <h4>Workout Complete!</h4>
                        <p id="prev-distance">Distance Ran: </p>
                        <p id="prev-time">Duration: </p>
                        <p id="prev-pace">Pace: </p>
                        <form id="clear-form" method="post" action="@Url.Action("ClearWorkoutActuals", "TrainingPlan")"
                            onsubmit="return confirmClear();">
                            <input type="hidden" id="clearWorkoutId" name="WorkoutId" value="@Model.Id">
                            <input type="hidden" name="returnUrl" value="Calendar" />
                            <button type="submit">Clear</button>
                        </form>

                    </div>
                    <form id="entry-form" method="post" style="display: none;"
                        action="@Url.Action("SaveWorkoutActuals", "TrainingPlan")">
                        <input type="hidden" id="workoutId" name="WorkoutId" value="@Model.Id">
                        <input type="hidden" name="returnUrl" value="Calendar" />
                        <div>
                            <label for="actualDistance"><h5>Actual Distance Ran:</h5></label>
                        </div>
                        <div class="mb-1">
                            <input type="number" id="actualDistance" name="ActualDistance" min="0" max="50" 
                                required aria-label="Actual Distance">
                            miles
                        </div>
                        <div>
                            <label for="actualTime"><h5>Actual Duration:</h5></label>
                            <div style="display: flex; justify-content: space-between; max-width: 200px;">
                                <div>
                                    <label for="actualHours">Hours:</label>
                                    <input type="number" id="actualHours" name="ActualHours" min="0" max="6" 
                                        required value="0" aria-label="Actual Distance">
                                </div>
                                <div>
                                    <label for="actualMinutes">Minutes:</label>
                                    <input type="number" id="actualMinutes" name="ActualMinutes" min="0" max="59"
                                        required value="0">
                                </div>
                                <div>
                                    <label for="actualSeconds">Seconds:</label>
                                    <input type="number" id="actualSeconds" name="ActualSeconds" min="0" max="59"
                                        required value="0">
                                </div>
                            </div>
                        </div>
                        <div>
                            <span id=warningField></span>
                        </div>
                        <button type="submit" class="loading-button">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<partial name="_MileageGraph" model="@Model.WeekDistances" />


<script src="https://unpkg.com/simple-jscalendar@1.4.4/source/jsCalendar.min.js"></script>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script>
    var viewModel = @Html.Raw(viewModelJson); 
    var targetRaceDisplayName = '@Model.TargetRaceDisplayName';
    var targetTime = '@Model.TargetTime';
    var targetPace = '@Model.TargetPace';
</script>
<script src="~/js/calendar.js"></script>
}
